// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContextSchool))]
    [Migration("20220510150309_inital")]
    partial class inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ability")
                        .HasColumnType("int")
                        .HasColumnName("ability");

                    b.Property<string>("ClassRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("classroom");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_date");

                    b.HasKey("Id")
                        .HasName("pk_courseid");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("Domain.Models.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<int>("Final")
                        .HasColumnType("int")
                        .HasColumnName("final");

                    b.Property<double>("FirstPartExam")
                        .HasColumnType("float")
                        .HasColumnName("firstexamn");

                    b.Property<double>("FirstPractice")
                        .HasColumnType("float")
                        .HasColumnName("firstpratice");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<double>("SecondPartExam")
                        .HasColumnType("float")
                        .HasColumnName("secondpartExam");

                    b.Property<double>("SecondPractice")
                        .HasColumnType("float")
                        .HasColumnName("secondpratice");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_date");

                    b.HasKey("Id")
                        .HasName("pk_qualificationid");

                    b.ToTable("Qualification");
                });

            modelBuilder.Entity("Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Births")
                        .HasColumnType("datetime")
                        .HasColumnName("birthday");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("email");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("udated_date");

                    b.Property<int>("Yeard")
                        .HasColumnType("INT")
                        .HasColumnName("yeard");

                    b.HasKey("Id")
                        .HasName("pk_studentid");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Domain.Models.StudentToSubject", b =>
                {
                    b.Property<int>("IdStudent")
                        .HasColumnType("INT");

                    b.Property<int>("IdSubject")
                        .HasColumnType("int");

                    b.HasKey("IdStudent", "IdSubject");

                    b.HasIndex("IdSubject");

                    b.ToTable("StudentToSubject");
                });

            modelBuilder.Entity("Domain.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<int>("Credits")
                        .HasColumnType("int")
                        .HasColumnName("credits");

                    b.Property<string>("Desctiption")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)")
                        .HasColumnName("description");

                    b.Property<int>("IdCourse")
                        .HasColumnType("INT");

                    b.Property<int>("IdQualification")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_date");

                    b.HasKey("Id")
                        .HasName("pk_sujectid");

                    b.HasIndex("IdCourse");

                    b.HasIndex("IdQualification");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Domain.Models.StudentToSubject", b =>
                {
                    b.HasOne("Domain.Models.Student", "Student")
                        .WithMany("Subjects")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Subject", "Subject")
                        .WithMany("Students")
                        .HasForeignKey("IdSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Domain.Models.Subject", b =>
                {
                    b.HasOne("Domain.Models.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("IdCourse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Qualification", "Qualification")
                        .WithMany("Subjects")
                        .HasForeignKey("IdQualification")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Qualification");
                });

            modelBuilder.Entity("Domain.Models.Course", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Domain.Models.Qualification", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Domain.Models.Student", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Domain.Models.Subject", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
